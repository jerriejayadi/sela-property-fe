import type { Metadata } from "next";
import { Inter, Josefin_Sans, Lato, Montserrat } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";
import Navbar from "@/components/Layout/Navbar";
import Footer from "@/components/Layout/Footer";
import { NextIntlClientProvider, useMessages } from "next-intl";
import Script from "next/script";

const inter = Inter({ subsets: ["latin"], variable: "--font-inter" });
const josefin_sans = Josefin_Sans({
  subsets: ["latin"],
  variable: "--font-josefin_sans",
});
const lato = Lato({
  subsets: ["latin"],
  variable: "--font-lato",
  weight: ["100", "300", "400", "700", "900"],
});
const montserrat = Montserrat({
  subsets: ["latin"],
  variable: "--font-montserrat",
});
const audrey = localFont({
  src: [
    {
      path: "/fonts/Audrey/Audrey-Normal.otf",
      weight: "500",
      style: "normal",
    },
    {
      path: "/fonts/Audrey/Audrey-Medium.otf",
      weight: "600",
      style: "normal",
    },
    {
      path: "/fonts/Audrey/Audrey-Bold.otf",
      weight: "700",
      style: "normal",
    },
  ],
  variable: "--font-audrey",
});

export const metadata: Metadata = {
  title: "Sela Property",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
  params: { locale },
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {
  const message = useMessages();
  const GA_ID = process.env.NEXT_PUBLIC_GA_ID;
  return (
    <html lang={locale}>
      <NextIntlClientProvider messages={message}>
        <head>
          {/* <Script
            id="meta-pixel"
            strategy="afterInteractive"
            dangerouslySetInnerHTML={{
              __html: `
                        !function(f,b,e,v,n,t,s)
                        {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
                        n.callMethod.apply(n,arguments):n.queue.push(arguments)};
                        if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
                        n.queue=[];t=b.createElement(e);t.async=!0;
                        t.src=v;s=b.getElementsByTagName(e)[0];
                        s.parentNode.insertBefore(t,s)}(window, document,'script',
                        'https://connect.facebook.net/en_US/fbevents.js');
                        fbq('init', '2066573267093769');
                        fbq('track', 'PageView');
                    `,
            }}
          /> */}
          {GA_ID && (
            <>
              <Script
                async
                src={`https://www.googletagmanager.com/gtag/js?id=${GA_ID}`}
              />
              <Script
                id="google-analytics"
                dangerouslySetInnerHTML={{
                  __html: `
                window.dataLayer = window.dataLayer || [];
                function gtag(){dataLayer.push(arguments);}
                gtag('js', new Date());

                gtag('config', '${GA_ID}');
                `,
                }}
              />
            </>
          )}
          {/* <Script
            strategy="afterInteractive"
            src={`https://www.googletagmanager.com/gtag/js?id=${GA_ID}`}
          />
          <Script
            id="google-analytics"
            strategy="afterInteractive"
            dangerouslySetInnerHTML={{
              __html: `
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', '${GA_ID}', {
              page_path: window.location.pathname,
            });
          `,
            }}
          /> */}
          {/* Fallback for noscript */}
        </head>
        <body
          className={`${inter.className} ${audrey.variable} ${josefin_sans.variable} ${lato.className} ${montserrat.variable} max-w-[1920px] mx-auto`}
        >
          <Navbar />
          {children}
          <Footer />
        </body>
      </NextIntlClientProvider>
    </html>
  );
}
